# Generated by Django 5.2.7 on 2025-10-22 05:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("model", models.CharField(max_length=255, verbose_name="Модель")),
                ("release_date", models.DateField(verbose_name="Дата выхода на рынок")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NetworkNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "node_type",
                    models.CharField(
                        choices=[
                            ("factory", "Завод"),
                            ("retail", "Розничная сеть"),
                            ("entrepreneur", "Индивидуальный предприниматель"),
                        ],
                        max_length=20,
                        verbose_name="Тип звена",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("country", models.CharField(max_length=100, verbose_name="Страна")),
                ("city", models.CharField(max_length=100, verbose_name="Город")),
                ("street", models.CharField(max_length=255, verbose_name="Улица")),
                (
                    "house_number",
                    models.CharField(max_length=10, verbose_name="Номер дома"),
                ),
                (
                    "debt",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Задолженность перед поставщиком",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активный"),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="network.networknode",
                        verbose_name="Поставщик",
                    ),
                ),
            ],
            options={
                "verbose_name": "Узел сети",
                "verbose_name_plural": "Узлы сети",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NetworkNodeProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество на складе"
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True, verbose_name="Доступен для продажи"
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления"
                    ),
                ),
                (
                    "network_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="network.networknode",
                        verbose_name="Узел сети",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="network.product",
                        verbose_name="Продукт",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт узла сети",
                "verbose_name_plural": "Продукты узлов сети",
                "unique_together": {("network_node", "product")},
            },
        ),
        migrations.AddField(
            model_name="networknode",
            name="products",
            field=models.ManyToManyField(
                related_name="network_nodes",
                through="network.NetworkNodeProduct",
                through_fields=("network_node", "product"),
                to="network.product",
                verbose_name="Продукты",
            ),
        ),
    ]
